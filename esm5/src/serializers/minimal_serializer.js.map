{"version":3,"file":"minimal_serializer.js","sourceRoot":"ng://@ngrx/router-store/","sources":["src/serializers/minimal_serializer.ts"],"names":[],"mappings":";;;;;;;;AAGA,mDAUC;;;IATC,oDAAmD;;IACnD,4CAAmC;;IACnC,+CAAyC;;IACzC,oDAAmD;;IACnD,iDAA6C;;IAC7C,6CAAqC;;IACrC,+CAAyC;;IACzC,mDAA2C;;IAC3C,iDAA0C;;;;;AAG5C,gDAGC;;;IAFC,0CAAoC;;IACpC,yCAAY;;AAGd;IAAA;IAgCA,CAAC;;;;;IA9BC,gDAAS;;;;IAAT,UAAU,WAAgC;QACxC,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC;YAC3C,GAAG,EAAE,WAAW,CAAC,GAAG;SACrB,CAAC;IACJ,CAAC;;;;;;IAEO,qDAAc;;;;;IAAtB,UACE,KAA6B;QAD/B,iBAsBC;;YAnBO,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG;;;;QAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAtB,CAAsB,EAAC;QAChE,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM;YACpB,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,GAAG,EAAE,KAAK,CAAC,GAAG;YACd,MAAM,EAAE,KAAK,CAAC,MAAM;YACpB,WAAW,EAAE,KAAK,CAAC,WAAW;gBAC5B,CAAC,CAAC;oBACE,IAAI,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI;oBAC5B,SAAS,EAAE,KAAK,CAAC,WAAW,CAAC,SAAS;oBACtC,UAAU,EAAE,KAAK,CAAC,WAAW,CAAC,UAAU;oBACxC,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,MAAM;iBACjC;gBACH,CAAC,CAAC,IAAI;YACR,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;YACvB,QAAQ,UAAA;SACT,CAAC;IACJ,CAAC;IACH,mCAAC;AAAD,CAAC,AAhCD,IAgCC","sourcesContent":["import { RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { BaseRouterStoreState, RouterStateSerializer } from './base';\n\nexport interface MinimalActivatedRouteSnapshot {\n  routeConfig: ActivatedRouteSnapshot['routeConfig'];\n  url: ActivatedRouteSnapshot['url'];\n  params: ActivatedRouteSnapshot['params'];\n  queryParams: ActivatedRouteSnapshot['queryParams'];\n  fragment: ActivatedRouteSnapshot['fragment'];\n  data: ActivatedRouteSnapshot['data'];\n  outlet: ActivatedRouteSnapshot['outlet'];\n  firstChild?: MinimalActivatedRouteSnapshot;\n  children: MinimalActivatedRouteSnapshot[];\n}\n\nexport interface MinimalRouterStateSnapshot extends BaseRouterStoreState {\n  root: MinimalActivatedRouteSnapshot;\n  url: string;\n}\n\nexport class MinimalRouterStateSerializer\n  implements RouterStateSerializer<MinimalRouterStateSnapshot> {\n  serialize(routerState: RouterStateSnapshot): MinimalRouterStateSnapshot {\n    return {\n      root: this.serializeRoute(routerState.root),\n      url: routerState.url,\n    };\n  }\n\n  private serializeRoute(\n    route: ActivatedRouteSnapshot\n  ): MinimalActivatedRouteSnapshot {\n    const children = route.children.map(c => this.serializeRoute(c));\n    return {\n      params: route.params,\n      data: route.data,\n      url: route.url,\n      outlet: route.outlet,\n      routeConfig: route.routeConfig\n        ? {\n            path: route.routeConfig.path,\n            pathMatch: route.routeConfig.pathMatch,\n            redirectTo: route.routeConfig.redirectTo,\n            outlet: route.routeConfig.outlet,\n          }\n        : null,\n      queryParams: route.queryParams,\n      fragment: route.fragment,\n      firstChild: children[0],\n      children,\n    };\n  }\n}\n"]}